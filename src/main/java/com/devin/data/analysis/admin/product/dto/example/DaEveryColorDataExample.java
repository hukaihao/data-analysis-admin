package com.devin.data.analysis.admin.product.dto.example;

import com.devin.data.analysis.admin.product.dto.DaEveryColorData;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class DaEveryColorDataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public DaEveryColorDataExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public DaEveryColorDataExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public DaEveryColorDataExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdEveryColorDataIsNull() {
            addCriterion("id_every_color_data is null");
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataIsNotNull() {
            addCriterion("id_every_color_data is not null");
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataEqualTo(String value) {
            addCriterion("id_every_color_data =", value, "idEveryColorData");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andIdEveryColorDataEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("id_every_color_data = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataNotEqualTo(String value) {
            addCriterion("id_every_color_data <>", value, "idEveryColorData");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andIdEveryColorDataNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("id_every_color_data <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataGreaterThan(String value) {
            addCriterion("id_every_color_data >", value, "idEveryColorData");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andIdEveryColorDataGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("id_every_color_data > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataGreaterThanOrEqualTo(String value) {
            addCriterion("id_every_color_data >=", value, "idEveryColorData");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andIdEveryColorDataGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("id_every_color_data >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataLessThan(String value) {
            addCriterion("id_every_color_data <", value, "idEveryColorData");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andIdEveryColorDataLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("id_every_color_data < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataLessThanOrEqualTo(String value) {
            addCriterion("id_every_color_data <=", value, "idEveryColorData");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andIdEveryColorDataLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("id_every_color_data <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataLike(String value) {
            addCriterion("id_every_color_data like", value, "idEveryColorData");
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataNotLike(String value) {
            addCriterion("id_every_color_data not like", value, "idEveryColorData");
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataIn(List<String> values) {
            addCriterion("id_every_color_data in", values, "idEveryColorData");
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataNotIn(List<String> values) {
            addCriterion("id_every_color_data not in", values, "idEveryColorData");
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataBetween(String value1, String value2) {
            addCriterion("id_every_color_data between", value1, value2, "idEveryColorData");
            return (Criteria) this;
        }

        public Criteria andIdEveryColorDataNotBetween(String value1, String value2) {
            addCriterion("id_every_color_data not between", value1, value2, "idEveryColorData");
            return (Criteria) this;
        }

        public Criteria andProductCodeIsNull() {
            addCriterion("product_code is null");
            return (Criteria) this;
        }

        public Criteria andProductCodeIsNotNull() {
            addCriterion("product_code is not null");
            return (Criteria) this;
        }

        public Criteria andProductCodeEqualTo(String value) {
            addCriterion("product_code =", value, "productCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andProductCodeEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("product_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductCodeNotEqualTo(String value) {
            addCriterion("product_code <>", value, "productCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andProductCodeNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("product_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductCodeGreaterThan(String value) {
            addCriterion("product_code >", value, "productCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andProductCodeGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("product_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductCodeGreaterThanOrEqualTo(String value) {
            addCriterion("product_code >=", value, "productCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andProductCodeGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("product_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductCodeLessThan(String value) {
            addCriterion("product_code <", value, "productCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andProductCodeLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("product_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductCodeLessThanOrEqualTo(String value) {
            addCriterion("product_code <=", value, "productCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andProductCodeLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("product_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductCodeLike(String value) {
            addCriterion("product_code like", value, "productCode");
            return (Criteria) this;
        }

        public Criteria andProductCodeNotLike(String value) {
            addCriterion("product_code not like", value, "productCode");
            return (Criteria) this;
        }

        public Criteria andProductCodeIn(List<String> values) {
            addCriterion("product_code in", values, "productCode");
            return (Criteria) this;
        }

        public Criteria andProductCodeNotIn(List<String> values) {
            addCriterion("product_code not in", values, "productCode");
            return (Criteria) this;
        }

        public Criteria andProductCodeBetween(String value1, String value2) {
            addCriterion("product_code between", value1, value2, "productCode");
            return (Criteria) this;
        }

        public Criteria andProductCodeNotBetween(String value1, String value2) {
            addCriterion("product_code not between", value1, value2, "productCode");
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodIsNull() {
            addCriterion("lottery_period is null");
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodIsNotNull() {
            addCriterion("lottery_period is not null");
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodEqualTo(String value) {
            addCriterion("lottery_period =", value, "lotteryPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryPeriodEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_period = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodNotEqualTo(String value) {
            addCriterion("lottery_period <>", value, "lotteryPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryPeriodNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_period <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodGreaterThan(String value) {
            addCriterion("lottery_period >", value, "lotteryPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryPeriodGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_period > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodGreaterThanOrEqualTo(String value) {
            addCriterion("lottery_period >=", value, "lotteryPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryPeriodGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_period >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodLessThan(String value) {
            addCriterion("lottery_period <", value, "lotteryPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryPeriodLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_period < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodLessThanOrEqualTo(String value) {
            addCriterion("lottery_period <=", value, "lotteryPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryPeriodLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_period <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodLike(String value) {
            addCriterion("lottery_period like", value, "lotteryPeriod");
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodNotLike(String value) {
            addCriterion("lottery_period not like", value, "lotteryPeriod");
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodIn(List<String> values) {
            addCriterion("lottery_period in", values, "lotteryPeriod");
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodNotIn(List<String> values) {
            addCriterion("lottery_period not in", values, "lotteryPeriod");
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodBetween(String value1, String value2) {
            addCriterion("lottery_period between", value1, value2, "lotteryPeriod");
            return (Criteria) this;
        }

        public Criteria andLotteryPeriodNotBetween(String value1, String value2) {
            addCriterion("lottery_period not between", value1, value2, "lotteryPeriod");
            return (Criteria) this;
        }

        public Criteria andLotteryDateIsNull() {
            addCriterion("lottery_date is null");
            return (Criteria) this;
        }

        public Criteria andLotteryDateIsNotNull() {
            addCriterion("lottery_date is not null");
            return (Criteria) this;
        }

        public Criteria andLotteryDateEqualTo(LocalDateTime value) {
            addCriterion("lottery_date =", value, "lotteryDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryDateEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryDateNotEqualTo(LocalDateTime value) {
            addCriterion("lottery_date <>", value, "lotteryDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryDateNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryDateGreaterThan(LocalDateTime value) {
            addCriterion("lottery_date >", value, "lotteryDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryDateGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("lottery_date >=", value, "lotteryDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryDateGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryDateLessThan(LocalDateTime value) {
            addCriterion("lottery_date <", value, "lotteryDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryDateLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("lottery_date <=", value, "lotteryDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andLotteryDateLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("lottery_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLotteryDateIn(List<LocalDateTime> values) {
            addCriterion("lottery_date in", values, "lotteryDate");
            return (Criteria) this;
        }

        public Criteria andLotteryDateNotIn(List<LocalDateTime> values) {
            addCriterion("lottery_date not in", values, "lotteryDate");
            return (Criteria) this;
        }

        public Criteria andLotteryDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("lottery_date between", value1, value2, "lotteryDate");
            return (Criteria) this;
        }

        public Criteria andLotteryDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("lottery_date not between", value1, value2, "lotteryDate");
            return (Criteria) this;
        }

        public Criteria andWanDigitIsNull() {
            addCriterion("wan_digit is null");
            return (Criteria) this;
        }

        public Criteria andWanDigitIsNotNull() {
            addCriterion("wan_digit is not null");
            return (Criteria) this;
        }

        public Criteria andWanDigitEqualTo(Byte value) {
            addCriterion("wan_digit =", value, "wanDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andWanDigitEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("wan_digit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWanDigitNotEqualTo(Byte value) {
            addCriterion("wan_digit <>", value, "wanDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andWanDigitNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("wan_digit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWanDigitGreaterThan(Byte value) {
            addCriterion("wan_digit >", value, "wanDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andWanDigitGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("wan_digit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWanDigitGreaterThanOrEqualTo(Byte value) {
            addCriterion("wan_digit >=", value, "wanDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andWanDigitGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("wan_digit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWanDigitLessThan(Byte value) {
            addCriterion("wan_digit <", value, "wanDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andWanDigitLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("wan_digit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWanDigitLessThanOrEqualTo(Byte value) {
            addCriterion("wan_digit <=", value, "wanDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andWanDigitLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("wan_digit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWanDigitIn(List<Byte> values) {
            addCriterion("wan_digit in", values, "wanDigit");
            return (Criteria) this;
        }

        public Criteria andWanDigitNotIn(List<Byte> values) {
            addCriterion("wan_digit not in", values, "wanDigit");
            return (Criteria) this;
        }

        public Criteria andWanDigitBetween(Byte value1, Byte value2) {
            addCriterion("wan_digit between", value1, value2, "wanDigit");
            return (Criteria) this;
        }

        public Criteria andWanDigitNotBetween(Byte value1, Byte value2) {
            addCriterion("wan_digit not between", value1, value2, "wanDigit");
            return (Criteria) this;
        }

        public Criteria andQianDigitIsNull() {
            addCriterion("qian_digit is null");
            return (Criteria) this;
        }

        public Criteria andQianDigitIsNotNull() {
            addCriterion("qian_digit is not null");
            return (Criteria) this;
        }

        public Criteria andQianDigitEqualTo(Byte value) {
            addCriterion("qian_digit =", value, "qianDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andQianDigitEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("qian_digit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQianDigitNotEqualTo(Byte value) {
            addCriterion("qian_digit <>", value, "qianDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andQianDigitNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("qian_digit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQianDigitGreaterThan(Byte value) {
            addCriterion("qian_digit >", value, "qianDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andQianDigitGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("qian_digit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQianDigitGreaterThanOrEqualTo(Byte value) {
            addCriterion("qian_digit >=", value, "qianDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andQianDigitGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("qian_digit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQianDigitLessThan(Byte value) {
            addCriterion("qian_digit <", value, "qianDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andQianDigitLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("qian_digit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQianDigitLessThanOrEqualTo(Byte value) {
            addCriterion("qian_digit <=", value, "qianDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andQianDigitLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("qian_digit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQianDigitIn(List<Byte> values) {
            addCriterion("qian_digit in", values, "qianDigit");
            return (Criteria) this;
        }

        public Criteria andQianDigitNotIn(List<Byte> values) {
            addCriterion("qian_digit not in", values, "qianDigit");
            return (Criteria) this;
        }

        public Criteria andQianDigitBetween(Byte value1, Byte value2) {
            addCriterion("qian_digit between", value1, value2, "qianDigit");
            return (Criteria) this;
        }

        public Criteria andQianDigitNotBetween(Byte value1, Byte value2) {
            addCriterion("qian_digit not between", value1, value2, "qianDigit");
            return (Criteria) this;
        }

        public Criteria andBaiDigitIsNull() {
            addCriterion("bai_digit is null");
            return (Criteria) this;
        }

        public Criteria andBaiDigitIsNotNull() {
            addCriterion("bai_digit is not null");
            return (Criteria) this;
        }

        public Criteria andBaiDigitEqualTo(Byte value) {
            addCriterion("bai_digit =", value, "baiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBaiDigitEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("bai_digit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBaiDigitNotEqualTo(Byte value) {
            addCriterion("bai_digit <>", value, "baiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBaiDigitNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("bai_digit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBaiDigitGreaterThan(Byte value) {
            addCriterion("bai_digit >", value, "baiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBaiDigitGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("bai_digit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBaiDigitGreaterThanOrEqualTo(Byte value) {
            addCriterion("bai_digit >=", value, "baiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBaiDigitGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("bai_digit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBaiDigitLessThan(Byte value) {
            addCriterion("bai_digit <", value, "baiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBaiDigitLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("bai_digit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBaiDigitLessThanOrEqualTo(Byte value) {
            addCriterion("bai_digit <=", value, "baiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBaiDigitLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("bai_digit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBaiDigitIn(List<Byte> values) {
            addCriterion("bai_digit in", values, "baiDigit");
            return (Criteria) this;
        }

        public Criteria andBaiDigitNotIn(List<Byte> values) {
            addCriterion("bai_digit not in", values, "baiDigit");
            return (Criteria) this;
        }

        public Criteria andBaiDigitBetween(Byte value1, Byte value2) {
            addCriterion("bai_digit between", value1, value2, "baiDigit");
            return (Criteria) this;
        }

        public Criteria andBaiDigitNotBetween(Byte value1, Byte value2) {
            addCriterion("bai_digit not between", value1, value2, "baiDigit");
            return (Criteria) this;
        }

        public Criteria andShiDigitIsNull() {
            addCriterion("shi_digit is null");
            return (Criteria) this;
        }

        public Criteria andShiDigitIsNotNull() {
            addCriterion("shi_digit is not null");
            return (Criteria) this;
        }

        public Criteria andShiDigitEqualTo(Byte value) {
            addCriterion("shi_digit =", value, "shiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andShiDigitEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("shi_digit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShiDigitNotEqualTo(Byte value) {
            addCriterion("shi_digit <>", value, "shiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andShiDigitNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("shi_digit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShiDigitGreaterThan(Byte value) {
            addCriterion("shi_digit >", value, "shiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andShiDigitGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("shi_digit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShiDigitGreaterThanOrEqualTo(Byte value) {
            addCriterion("shi_digit >=", value, "shiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andShiDigitGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("shi_digit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShiDigitLessThan(Byte value) {
            addCriterion("shi_digit <", value, "shiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andShiDigitLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("shi_digit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShiDigitLessThanOrEqualTo(Byte value) {
            addCriterion("shi_digit <=", value, "shiDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andShiDigitLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("shi_digit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShiDigitIn(List<Byte> values) {
            addCriterion("shi_digit in", values, "shiDigit");
            return (Criteria) this;
        }

        public Criteria andShiDigitNotIn(List<Byte> values) {
            addCriterion("shi_digit not in", values, "shiDigit");
            return (Criteria) this;
        }

        public Criteria andShiDigitBetween(Byte value1, Byte value2) {
            addCriterion("shi_digit between", value1, value2, "shiDigit");
            return (Criteria) this;
        }

        public Criteria andShiDigitNotBetween(Byte value1, Byte value2) {
            addCriterion("shi_digit not between", value1, value2, "shiDigit");
            return (Criteria) this;
        }

        public Criteria andGeDigitIsNull() {
            addCriterion("ge_digit is null");
            return (Criteria) this;
        }

        public Criteria andGeDigitIsNotNull() {
            addCriterion("ge_digit is not null");
            return (Criteria) this;
        }

        public Criteria andGeDigitEqualTo(Byte value) {
            addCriterion("ge_digit =", value, "geDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andGeDigitEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("ge_digit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGeDigitNotEqualTo(Byte value) {
            addCriterion("ge_digit <>", value, "geDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andGeDigitNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("ge_digit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGeDigitGreaterThan(Byte value) {
            addCriterion("ge_digit >", value, "geDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andGeDigitGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("ge_digit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGeDigitGreaterThanOrEqualTo(Byte value) {
            addCriterion("ge_digit >=", value, "geDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andGeDigitGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("ge_digit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGeDigitLessThan(Byte value) {
            addCriterion("ge_digit <", value, "geDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andGeDigitLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("ge_digit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGeDigitLessThanOrEqualTo(Byte value) {
            addCriterion("ge_digit <=", value, "geDigit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andGeDigitLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("ge_digit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGeDigitIn(List<Byte> values) {
            addCriterion("ge_digit in", values, "geDigit");
            return (Criteria) this;
        }

        public Criteria andGeDigitNotIn(List<Byte> values) {
            addCriterion("ge_digit not in", values, "geDigit");
            return (Criteria) this;
        }

        public Criteria andGeDigitBetween(Byte value1, Byte value2) {
            addCriterion("ge_digit between", value1, value2, "geDigit");
            return (Criteria) this;
        }

        public Criteria andGeDigitNotBetween(Byte value1, Byte value2) {
            addCriterion("ge_digit not between", value1, value2, "geDigit");
            return (Criteria) this;
        }

        public Criteria andBigDealIsNull() {
            addCriterion("big_deal is null");
            return (Criteria) this;
        }

        public Criteria andBigDealIsNotNull() {
            addCriterion("big_deal is not null");
            return (Criteria) this;
        }

        public Criteria andBigDealEqualTo(String value) {
            addCriterion("big_deal =", value, "bigDeal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBigDealEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("big_deal = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigDealNotEqualTo(String value) {
            addCriterion("big_deal <>", value, "bigDeal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBigDealNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("big_deal <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigDealGreaterThan(String value) {
            addCriterion("big_deal >", value, "bigDeal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBigDealGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("big_deal > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigDealGreaterThanOrEqualTo(String value) {
            addCriterion("big_deal >=", value, "bigDeal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBigDealGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("big_deal >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigDealLessThan(String value) {
            addCriterion("big_deal <", value, "bigDeal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBigDealLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("big_deal < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigDealLessThanOrEqualTo(String value) {
            addCriterion("big_deal <=", value, "bigDeal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andBigDealLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("big_deal <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigDealLike(String value) {
            addCriterion("big_deal like", value, "bigDeal");
            return (Criteria) this;
        }

        public Criteria andBigDealNotLike(String value) {
            addCriterion("big_deal not like", value, "bigDeal");
            return (Criteria) this;
        }

        public Criteria andBigDealIn(List<String> values) {
            addCriterion("big_deal in", values, "bigDeal");
            return (Criteria) this;
        }

        public Criteria andBigDealNotIn(List<String> values) {
            addCriterion("big_deal not in", values, "bigDeal");
            return (Criteria) this;
        }

        public Criteria andBigDealBetween(String value1, String value2) {
            addCriterion("big_deal between", value1, value2, "bigDeal");
            return (Criteria) this;
        }

        public Criteria andBigDealNotBetween(String value1, String value2) {
            addCriterion("big_deal not between", value1, value2, "bigDeal");
            return (Criteria) this;
        }

        public Criteria andVingtEtunIsNull() {
            addCriterion("vingt_etun is null");
            return (Criteria) this;
        }

        public Criteria andVingtEtunIsNotNull() {
            addCriterion("vingt_etun is not null");
            return (Criteria) this;
        }

        public Criteria andVingtEtunEqualTo(String value) {
            addCriterion("vingt_etun =", value, "vingtEtun");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andVingtEtunEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("vingt_etun = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVingtEtunNotEqualTo(String value) {
            addCriterion("vingt_etun <>", value, "vingtEtun");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andVingtEtunNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("vingt_etun <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVingtEtunGreaterThan(String value) {
            addCriterion("vingt_etun >", value, "vingtEtun");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andVingtEtunGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("vingt_etun > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVingtEtunGreaterThanOrEqualTo(String value) {
            addCriterion("vingt_etun >=", value, "vingtEtun");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andVingtEtunGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("vingt_etun >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVingtEtunLessThan(String value) {
            addCriterion("vingt_etun <", value, "vingtEtun");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andVingtEtunLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("vingt_etun < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVingtEtunLessThanOrEqualTo(String value) {
            addCriterion("vingt_etun <=", value, "vingtEtun");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andVingtEtunLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("vingt_etun <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVingtEtunLike(String value) {
            addCriterion("vingt_etun like", value, "vingtEtun");
            return (Criteria) this;
        }

        public Criteria andVingtEtunNotLike(String value) {
            addCriterion("vingt_etun not like", value, "vingtEtun");
            return (Criteria) this;
        }

        public Criteria andVingtEtunIn(List<String> values) {
            addCriterion("vingt_etun in", values, "vingtEtun");
            return (Criteria) this;
        }

        public Criteria andVingtEtunNotIn(List<String> values) {
            addCriterion("vingt_etun not in", values, "vingtEtun");
            return (Criteria) this;
        }

        public Criteria andVingtEtunBetween(String value1, String value2) {
            addCriterion("vingt_etun between", value1, value2, "vingtEtun");
            return (Criteria) this;
        }

        public Criteria andVingtEtunNotBetween(String value1, String value2) {
            addCriterion("vingt_etun not between", value1, value2, "vingtEtun");
            return (Criteria) this;
        }

        public Criteria andParityIsNull() {
            addCriterion("parity is null");
            return (Criteria) this;
        }

        public Criteria andParityIsNotNull() {
            addCriterion("parity is not null");
            return (Criteria) this;
        }

        public Criteria andParityEqualTo(String value) {
            addCriterion("parity =", value, "parity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andParityEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("parity = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParityNotEqualTo(String value) {
            addCriterion("parity <>", value, "parity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andParityNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("parity <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParityGreaterThan(String value) {
            addCriterion("parity >", value, "parity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andParityGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("parity > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParityGreaterThanOrEqualTo(String value) {
            addCriterion("parity >=", value, "parity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andParityGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("parity >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParityLessThan(String value) {
            addCriterion("parity <", value, "parity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andParityLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("parity < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParityLessThanOrEqualTo(String value) {
            addCriterion("parity <=", value, "parity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andParityLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("parity <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParityLike(String value) {
            addCriterion("parity like", value, "parity");
            return (Criteria) this;
        }

        public Criteria andParityNotLike(String value) {
            addCriterion("parity not like", value, "parity");
            return (Criteria) this;
        }

        public Criteria andParityIn(List<String> values) {
            addCriterion("parity in", values, "parity");
            return (Criteria) this;
        }

        public Criteria andParityNotIn(List<String> values) {
            addCriterion("parity not in", values, "parity");
            return (Criteria) this;
        }

        public Criteria andParityBetween(String value1, String value2) {
            addCriterion("parity between", value1, value2, "parity");
            return (Criteria) this;
        }

        public Criteria andParityNotBetween(String value1, String value2) {
            addCriterion("parity not between", value1, value2, "parity");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNull() {
            addCriterion("created_date is null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNotNull() {
            addCriterion("created_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateEqualTo(LocalDateTime value) {
            addCriterion("created_date =", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andCreatedDateEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("created_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotEqualTo(LocalDateTime value) {
            addCriterion("created_date <>", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andCreatedDateNotEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("created_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThan(LocalDateTime value) {
            addCriterion("created_date >", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andCreatedDateGreaterThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("created_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("created_date >=", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andCreatedDateGreaterThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("created_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThan(LocalDateTime value) {
            addCriterion("created_date <", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andCreatedDateLessThanColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("created_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("created_date <=", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andCreatedDateLessThanOrEqualToColumn(DaEveryColorData.Column column) {
            addCriterion(new StringBuilder("created_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateIn(List<LocalDateTime> values) {
            addCriterion("created_date in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotIn(List<LocalDateTime> values) {
            addCriterion("created_date not in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("created_date between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("created_date not between", value1, value2, "createdDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table da_every_color_data
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        private DaEveryColorDataExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        protected Criteria(DaEveryColorDataExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public DaEveryColorDataExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This interface was generated by MyBatis Generator.
         * This interface corresponds to the database table da_every_color_data
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table da_every_color_data
             *
             * @mbg.generated
             * @project https://github.com/itfsw/mybatis-generator-plugin
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table da_every_color_data
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}